<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.ImportsSystemFuelMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsSystemFuel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="from_day" jdbcType="DATE" property="fromDay" />
    <result column="to_day" jdbcType="DATE" property="toDay" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, rate, from_day, to_day, type, created, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from imports_system_fuel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from imports_system_fuel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsSystemFuel" useGeneratedKeys="true">
    insert into imports_system_fuel (rate, from_day, to_day, 
      type, created, user_id
      )
    values (#{rate,jdbcType=DECIMAL}, #{fromDay,jdbcType=DATE}, #{toDay,jdbcType=DATE}, 
      #{type,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsSystemFuel" useGeneratedKeys="true">
    insert into imports_system_fuel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rate != null">
        rate,
      </if>
      <if test="fromDay != null">
        from_day,
      </if>
      <if test="toDay != null">
        to_day,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="fromDay != null">
        #{fromDay,jdbcType=DATE},
      </if>
      <if test="toDay != null">
        #{toDay,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsSystemFuel">
    update imports_system_fuel
    <set>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="fromDay != null">
        from_day = #{fromDay,jdbcType=DATE},
      </if>
      <if test="toDay != null">
        to_day = #{toDay,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsSystemFuel">
    update imports_system_fuel
    set rate = #{rate,jdbcType=DECIMAL},
      from_day = #{fromDay,jdbcType=DATE},
      to_day = #{toDay,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>