<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.PostcodeDistanceMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="origin" jdbcType="INTEGER" property="origin" />
    <result column="destination" jdbcType="VARCHAR" property="destination" />
    <result column="distance" jdbcType="INTEGER" property="distance" />
    <result column="suburb" jdbcType="VARCHAR" property="suburb" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="country" jdbcType="VARCHAR" property="country" />
  </resultMap>
  <sql id="Base_Column_List">
    id, origin, destination, distance, suburb, state, country
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from postcode_distance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByOriginDestinationSuburbState" resultType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance">
    SELECT * FROM postcode_distance
    WHERE origin = #{origin}
      AND destination = #{destination}
      AND suburb = #{suburb}
      AND state = #{state}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from postcode_distance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertFromGoogleAPI" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance" useGeneratedKeys="true">
    insert into postcode_distance (origin, destination, distance, suburb, state, country)
    values (#{origin,jdbcType=INTEGER}, #{destination,jdbcType=VARCHAR}, #{distance,jdbcType=INTEGER}, 
      #{suburb,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance" useGeneratedKeys="true">
    insert into postcode_distance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="origin != null">
        origin,
      </if>
      <if test="destination != null">
        destination,
      </if>
      <if test="distance != null">
        distance,
      </if>
      <if test="suburb != null">
        suburb,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="country != null">
        country,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="origin != null">
        #{origin,jdbcType=INTEGER},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="distance != null">
        #{distance,jdbcType=INTEGER},
      </if>
      <if test="suburb != null">
        #{suburb,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance">
    update postcode_distance
    <set>
      <if test="origin != null">
        origin = #{origin,jdbcType=INTEGER},
      </if>
      <if test="destination != null">
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="distance != null">
        distance = #{distance,jdbcType=INTEGER},
      </if>
      <if test="suburb != null">
        suburb = #{suburb,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PostcodeDistance">
    update postcode_distance
    set origin = #{origin,jdbcType=INTEGER},
      destination = #{destination,jdbcType=VARCHAR},
      distance = #{distance,jdbcType=INTEGER},
      suburb = #{suburb,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>