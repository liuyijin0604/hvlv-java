<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.HeldScanCheckMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.HeldScanCheck">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="scan" jdbcType="INTEGER" property="scan" />
    <result column="dpt_id" jdbcType="INTEGER" property="dptId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, created, scan, dpt_id, type, barcode
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from held_scan_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from held_scan_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.HeldScanCheck" useGeneratedKeys="true">
    insert into held_scan_check (pid, created, scan, 
      dpt_id, type, barcode
      )
    values (#{pid,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{scan,jdbcType=INTEGER}, 
      #{dptId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{barcode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.HeldScanCheck" useGeneratedKeys="true">
    insert into held_scan_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="scan != null">
        scan,
      </if>
      <if test="dptId != null">
        dpt_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="scan != null">
        #{scan,jdbcType=INTEGER},
      </if>
      <if test="dptId != null">
        #{dptId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.HeldScanCheck">
    update held_scan_check
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="scan != null">
        scan = #{scan,jdbcType=INTEGER},
      </if>
      <if test="dptId != null">
        dpt_id = #{dptId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.HeldScanCheck">
    update held_scan_check
    set pid = #{pid,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      scan = #{scan,jdbcType=INTEGER},
      dpt_id = #{dptId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>