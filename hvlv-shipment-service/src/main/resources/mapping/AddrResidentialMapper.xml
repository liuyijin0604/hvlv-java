<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.AddrResidentialMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.AddrResidential">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="suburb" jdbcType="VARCHAR" property="suburb" />
    <result column="postcode" jdbcType="VARCHAR" property="postcode" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, address, suburb, postcode, country, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from addr_residential
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByAddressSuburbPostcode" resultType="int">
    SELECT COUNT(*)
    FROM addr_residential
    WHERE address = #{address}
      AND suburb = #{suburb}
      AND postcode = #{postcode}
      AND country = 'Australia'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from addr_residential
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.AddrResidential" useGeneratedKeys="true">
    insert into addr_residential (address, suburb, postcode, 
      country, create_time)
    values (#{address,jdbcType=VARCHAR}, #{suburb,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.AddrResidential" useGeneratedKeys="true">
    insert into addr_residential
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="address != null">
        address,
      </if>
      <if test="suburb != null">
        suburb,
      </if>
      <if test="postcode != null">
        postcode,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="suburb != null">
        #{suburb,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.AddrResidential">
    update addr_residential
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="suburb != null">
        suburb = #{suburb,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.AddrResidential">
    update addr_residential
    set address = #{address,jdbcType=VARCHAR},
      suburb = #{suburb,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>