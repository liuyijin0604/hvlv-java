<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.BankStatementMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.BankStatement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bank_account_id" jdbcType="INTEGER" property="bankAccountId" />
    <result column="currency" jdbcType="TINYINT" property="currency" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="debits" jdbcType="DECIMAL" property="debits" />
    <result column="credits" jdbcType="DECIMAL" property="credits" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="reconciled" jdbcType="TINYINT" property="reconciled" />
    <result column="reconciled_date" jdbcType="DATE" property="reconciledDate" />
    <result column="hash" jdbcType="VARCHAR" property="hash" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bank_account_id, currency, created, desc, debits, credits, balance, org_id, reconciled, 
    reconciled_date, hash
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank_statement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bank_statement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.BankStatement" useGeneratedKeys="true">
    insert into bank_statement (bank_account_id, currency, created, 
      desc, debits, credits, 
      balance, org_id, reconciled, 
      reconciled_date, hash)
    values (#{bankAccountId,jdbcType=INTEGER}, #{currency,jdbcType=TINYINT}, #{created,jdbcType=DATE}, 
      #{desc,jdbcType=VARCHAR}, #{debits,jdbcType=DECIMAL}, #{credits,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{orgId,jdbcType=INTEGER}, #{reconciled,jdbcType=TINYINT}, 
      #{reconciledDate,jdbcType=DATE}, #{hash,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.BankStatement" useGeneratedKeys="true">
    insert into bank_statement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankAccountId != null">
        bank_account_id,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="debits != null">
        debits,
      </if>
      <if test="credits != null">
        credits,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="reconciled != null">
        reconciled,
      </if>
      <if test="reconciledDate != null">
        reconciled_date,
      </if>
      <if test="hash != null">
        hash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankAccountId != null">
        #{bankAccountId,jdbcType=INTEGER},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="debits != null">
        #{debits,jdbcType=DECIMAL},
      </if>
      <if test="credits != null">
        #{credits,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="reconciled != null">
        #{reconciled,jdbcType=TINYINT},
      </if>
      <if test="reconciledDate != null">
        #{reconciledDate,jdbcType=DATE},
      </if>
      <if test="hash != null">
        #{hash,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.BankStatement">
    update bank_statement
    <set>
      <if test="bankAccountId != null">
        bank_account_id = #{bankAccountId,jdbcType=INTEGER},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="debits != null">
        debits = #{debits,jdbcType=DECIMAL},
      </if>
      <if test="credits != null">
        credits = #{credits,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="reconciled != null">
        reconciled = #{reconciled,jdbcType=TINYINT},
      </if>
      <if test="reconciledDate != null">
        reconciled_date = #{reconciledDate,jdbcType=DATE},
      </if>
      <if test="hash != null">
        hash = #{hash,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.BankStatement">
    update bank_statement
    set bank_account_id = #{bankAccountId,jdbcType=INTEGER},
      currency = #{currency,jdbcType=TINYINT},
      created = #{created,jdbcType=DATE},
      desc = #{desc,jdbcType=VARCHAR},
      debits = #{debits,jdbcType=DECIMAL},
      credits = #{credits,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      org_id = #{orgId,jdbcType=INTEGER},
      reconciled = #{reconciled,jdbcType=TINYINT},
      reconciled_date = #{reconciledDate,jdbcType=DATE},
      hash = #{hash,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>