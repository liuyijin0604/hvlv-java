<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.DfeChangeLabelMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DfeChangeLabel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dfe_ref" jdbcType="VARCHAR" property="dfeRef" />
    <result column="sn" jdbcType="INTEGER" property="sn" />
    <result column="allied_ref" jdbcType="VARCHAR" property="alliedRef" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="create" jdbcType="TIMESTAMP" property="create" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dfe_ref, sn, allied_ref, pid, create, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dfe_change_label
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dfe_change_label
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DfeChangeLabel" useGeneratedKeys="true">
    insert into dfe_change_label (dfe_ref, sn, allied_ref, 
      pid, create, user_id
      )
    values (#{dfeRef,jdbcType=VARCHAR}, #{sn,jdbcType=INTEGER}, #{alliedRef,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{create,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DfeChangeLabel" useGeneratedKeys="true">
    insert into dfe_change_label
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dfeRef != null">
        dfe_ref,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="alliedRef != null">
        allied_ref,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="create != null">
        create,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dfeRef != null">
        #{dfeRef,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=INTEGER},
      </if>
      <if test="alliedRef != null">
        #{alliedRef,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="create != null">
        #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DfeChangeLabel">
    update dfe_change_label
    <set>
      <if test="dfeRef != null">
        dfe_ref = #{dfeRef,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=INTEGER},
      </if>
      <if test="alliedRef != null">
        allied_ref = #{alliedRef,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="create != null">
        create = #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DfeChangeLabel">
    update dfe_change_label
    set dfe_ref = #{dfeRef,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=INTEGER},
      allied_ref = #{alliedRef,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      create = #{create,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>