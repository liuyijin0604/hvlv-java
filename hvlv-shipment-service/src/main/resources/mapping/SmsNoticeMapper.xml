<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.SmsNoticeMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_processed" jdbcType="BIT" property="isProcessed" />
    <result column="cargo_process_id" jdbcType="INTEGER" property="cargoProcessId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Base_Column_List">
    id, phone, is_processed, cargo_process_id
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sms_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sms_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice" useGeneratedKeys="true">
    insert into sms_notice (phone, is_processed, cargo_process_id, 
      message)
    values (#{phone,jdbcType=VARCHAR}, #{isProcessed,jdbcType=BIT}, #{cargoProcessId,jdbcType=INTEGER}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice" useGeneratedKeys="true">
    insert into sms_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="phone != null">
        phone,
      </if>
      <if test="isProcessed != null">
        is_processed,
      </if>
      <if test="cargoProcessId != null">
        cargo_process_id,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isProcessed != null">
        #{isProcessed,jdbcType=BIT},
      </if>
      <if test="cargoProcessId != null">
        #{cargoProcessId,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice">
    update sms_notice
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isProcessed != null">
        is_processed = #{isProcessed,jdbcType=BIT},
      </if>
      <if test="cargoProcessId != null">
        cargo_process_id = #{cargoProcessId,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice">
    update sms_notice
    set phone = #{phone,jdbcType=VARCHAR},
      is_processed = #{isProcessed,jdbcType=BIT},
      cargo_process_id = #{cargoProcessId,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.SmsNotice">
    update sms_notice
    set phone = #{phone,jdbcType=VARCHAR},
      is_processed = #{isProcessed,jdbcType=BIT},
      cargo_process_id = #{cargoProcessId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>