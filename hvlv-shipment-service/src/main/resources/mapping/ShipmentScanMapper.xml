<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.ShipmentScanMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ShipmentScan">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pno" jdbcType="TINYINT" property="pno" />
    <result column="warehouse" jdbcType="INTEGER" property="warehouse" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="scan_time" jdbcType="TIMESTAMP" property="scanTime" />
    <result column="pkg" jdbcType="INTEGER" property="pkg" />
    <result column="weight" jdbcType="REAL" property="weight" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, pid, pno, warehouse, type, scan_time, pkg, weight
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shipment_scan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shipment_scan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ShipmentScan" useGeneratedKeys="true">
    insert into shipment_scan (user_id, pid, pno, 
      warehouse, type, scan_time, 
      pkg, weight)
    values (#{userId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{pno,jdbcType=TINYINT}, 
      #{warehouse,jdbcType=INTEGER}, #{type,jdbcType=BIT}, #{scanTime,jdbcType=TIMESTAMP}, 
      #{pkg,jdbcType=INTEGER}, #{weight,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ShipmentScan" useGeneratedKeys="true">
    insert into shipment_scan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="pno != null">
        pno,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="scanTime != null">
        scan_time,
      </if>
      <if test="pkg != null">
        pkg,
      </if>
      <if test="weight != null">
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pno != null">
        #{pno,jdbcType=TINYINT},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="scanTime != null">
        #{scanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pkg != null">
        #{pkg,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ShipmentScan">
    update shipment_scan
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="pno != null">
        pno = #{pno,jdbcType=TINYINT},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="scanTime != null">
        scan_time = #{scanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pkg != null">
        pkg = #{pkg,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ShipmentScan">
    update shipment_scan
    set user_id = #{userId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      pno = #{pno,jdbcType=TINYINT},
      warehouse = #{warehouse,jdbcType=INTEGER},
      type = #{type,jdbcType=BIT},
      scan_time = #{scanTime,jdbcType=TIMESTAMP},
      pkg = #{pkg,jdbcType=INTEGER},
      weight = #{weight,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertShipmentScanProcessRecord" parameterType="ShipmentScanMqProcess" useGeneratedKeys="true" keyProperty="id" >
    insert into shipment_scan_mq_process (user_id, barcode,pid,pno,warehouse,`type`,scan_time) values

    (#{userId},
     #{barcode},
     #{pid},
     #{pno},
     #{warehouse},
     #{type},
     #{scanTime}
    );

  </insert>

  <select id="checkCurrentShipmentScanRecord" resultType="Integer">
    select count(1) from shipment_scan_mq_process where pid =#{shipmentId} and pno=#{sn} AND `scan_time` > DATE_SUB(NOW(), INTERVAL 3000 SECOND)
  </select>

</mapper>