<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.EmailogMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="dt" jdbcType="TIMESTAMP" property="dt" />
    <result column="scheduled" jdbcType="TIMESTAMP" property="scheduled" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog">
    <result column="subject" jdbcType="LONGVARCHAR" property="subject" />
    <result column="body" jdbcType="LONGVARCHAR" property="body" />
    <result column="meta" jdbcType="LONGVARCHAR" property="meta" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, to_id, status, type, fid, dt, scheduled
  </sql>
  <sql id="Blob_Column_List">
    subject, body, meta
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from emailog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emailog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog" useGeneratedKeys="true">
    insert into emailog (from_id, to_id, status, 
      type, fid, dt, scheduled, 
      subject, body, meta
      )
    values (#{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{fid,jdbcType=INTEGER}, #{dt,jdbcType=TIMESTAMP}, #{scheduled,jdbcType=TIMESTAMP}, 
      #{subject,jdbcType=LONGVARCHAR}, #{body,jdbcType=LONGVARCHAR}, #{meta,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog" useGeneratedKeys="true">
    insert into emailog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="dt != null">
        dt,
      </if>
      <if test="scheduled != null">
        scheduled,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="meta != null">
        meta,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="dt != null">
        #{dt,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduled != null">
        #{scheduled,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog">
    update emailog
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="dt != null">
        dt = #{dt,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduled != null">
        scheduled = #{scheduled,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog">
    update emailog
    set from_id = #{fromId,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      fid = #{fid,jdbcType=INTEGER},
      dt = #{dt,jdbcType=TIMESTAMP},
      scheduled = #{scheduled,jdbcType=TIMESTAMP},
      subject = #{subject,jdbcType=LONGVARCHAR},
      body = #{body,jdbcType=LONGVARCHAR},
      meta = #{meta,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.Emailog">
    update emailog
    set from_id = #{fromId,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      fid = #{fid,jdbcType=INTEGER},
      dt = #{dt,jdbcType=TIMESTAMP},
      scheduled = #{scheduled,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>