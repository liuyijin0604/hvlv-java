<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.PaymentArrangeMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="created" jdbcType="DATE" property="created" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="approved" jdbcType="DECIMAL" property="approved" />
    <result column="currency" jdbcType="INTEGER" property="currency" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange">
    <result column="meta" jdbcType="LONGVARCHAR" property="meta" />
  </resultMap>
  <sql id="Base_Column_List">
    id, no, created, user_id, status, total, approved, currency, comment
  </sql>
  <sql id="Blob_Column_List">
    meta
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from payment_arrange
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment_arrange
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange" useGeneratedKeys="true">
    insert into payment_arrange (no, created, user_id, 
      status, total, approved, 
      currency, comment, meta
      )
    values (#{no,jdbcType=VARCHAR}, #{created,jdbcType=DATE}, #{userId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{total,jdbcType=DECIMAL}, #{approved,jdbcType=DECIMAL}, 
      #{currency,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{meta,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange" useGeneratedKeys="true">
    insert into payment_arrange
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        no,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="approved != null">
        approved,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="meta != null">
        meta,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="approved != null">
        #{approved,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange">
    update payment_arrange
    <set>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="approved != null">
        approved = #{approved,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange">
    update payment_arrange
    set no = #{no,jdbcType=VARCHAR},
      created = #{created,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      total = #{total,jdbcType=DECIMAL},
      approved = #{approved,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      meta = #{meta,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.PaymentArrange">
    update payment_arrange
    set no = #{no,jdbcType=VARCHAR},
      created = #{created,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      total = #{total,jdbcType=DECIMAL},
      approved = #{approved,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>