<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.ImportsMailSignatureMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="sig_name" jdbcType="VARCHAR" property="sigName" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature">
    <result column="sig_body" jdbcType="LONGVARCHAR" property="sigBody" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, sig_name, status
  </sql>
  <sql id="Blob_Column_List">
    sig_body
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from imports_mail_signature
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from imports_mail_signature
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature" useGeneratedKeys="true">
    insert into imports_mail_signature (user_id, sig_name, status, 
      sig_body)
    values (#{userId,jdbcType=INTEGER}, #{sigName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{sigBody,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature" useGeneratedKeys="true">
    insert into imports_mail_signature
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sigName != null">
        sig_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sigBody != null">
        sig_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sigName != null">
        #{sigName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sigBody != null">
        #{sigBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature">
    update imports_mail_signature
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sigName != null">
        sig_name = #{sigName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="sigBody != null">
        sig_body = #{sigBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature">
    update imports_mail_signature
    set user_id = #{userId,jdbcType=INTEGER},
      sig_name = #{sigName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      sig_body = #{sigBody,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.ImportsMailSignature">
    update imports_mail_signature
    set user_id = #{userId,jdbcType=INTEGER},
      sig_name = #{sigName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>