<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.MailUserMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="mail_id" jdbcType="INTEGER" property="mailId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="close_time" jdbcType="TIMESTAMP" property="closeTime" />
    <result column="park_time" jdbcType="TIMESTAMP" property="parkTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mail_type" jdbcType="INTEGER" property="mailType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser">
    <result column="meta" jdbcType="LONGVARCHAR" property="meta" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, mail_id, create_time, close_time, park_time, status, mail_type
  </sql>
  <sql id="Blob_Column_List">
    meta
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mail_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mail_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser" useGeneratedKeys="true">
    insert into mail_user (user_id, mail_id, create_time, 
      close_time, park_time, status, 
      mail_type, meta)
    values (#{userId,jdbcType=INTEGER}, #{mailId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{closeTime,jdbcType=TIMESTAMP}, #{parkTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{mailType,jdbcType=INTEGER}, #{meta,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser" useGeneratedKeys="true">
    insert into mail_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="mailId != null">
        mail_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="parkTime != null">
        park_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="mailType != null">
        mail_type,
      </if>
      <if test="meta != null">
        meta,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        #{mailId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parkTime != null">
        #{parkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="mailType != null">
        #{mailType,jdbcType=INTEGER},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser">
    update mail_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        mail_id = #{mailId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parkTime != null">
        park_time = #{parkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="mailType != null">
        mail_type = #{mailType,jdbcType=INTEGER},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser">
    update mail_user
    set user_id = #{userId,jdbcType=INTEGER},
      mail_id = #{mailId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      park_time = #{parkTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      mail_type = #{mailType,jdbcType=INTEGER},
      meta = #{meta,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.MailUser">
    update mail_user
    set user_id = #{userId,jdbcType=INTEGER},
      mail_id = #{mailId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      park_time = #{parkTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      mail_type = #{mailType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>