<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hvlv.microservices.shipmentService.hvlvShipmentService.mapper.DxtPushQueueMapper">
  <resultMap id="BaseResultMap" type="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DxtPushQueue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="added_time" jdbcType="TIMESTAMP" property="addedTime" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="ref" jdbcType="VARCHAR" property="ref" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, message, added_time, send_time, status, ref
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dxt_push_queue
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dxt_push_queue
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DxtPushQueue" useGeneratedKeys="true">
    insert into dxt_push_queue (type, message, added_time, 
      send_time, status, ref
      )
    values (#{type,jdbcType=TINYINT}, #{message,jdbcType=VARCHAR}, #{addedTime,jdbcType=TIMESTAMP}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{ref,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DxtPushQueue" useGeneratedKeys="true">
    insert into dxt_push_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="addedTime != null">
        added_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ref != null">
        ref,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="addedTime != null">
        #{addedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="ref != null">
        #{ref,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DxtPushQueue">
    update dxt_push_queue
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="addedTime != null">
        added_time = #{addedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ref != null">
        ref = #{ref,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hvlv.microservices.shipmentService.hvlvShipmentService.entity.DxtPushQueue">
    update dxt_push_queue
    set type = #{type,jdbcType=TINYINT},
      message = #{message,jdbcType=VARCHAR},
      added_time = #{addedTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      ref = #{ref,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>